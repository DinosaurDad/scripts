#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Simple generator of chapter files suitable for use with mkvmerge when
creating a concatenated file from multiple video files (think: shows taken
from Youtube) and we want each of the multiple files to be have a
pointer/chapter marker for easy navigation.

We assume that the files to be concatenated are listed in the input file in
the format:

    name_1
    length_1
    name_2
    length_2
    ...
    name_n
    length_n

and that the order of the files is the intended, final order in which they
should appear in the concatenated file (this is the case when, say,
downloading a playlist with `youtube-dl` and using the autonumbering switch
`-A`).

The input in the format above can be generated by the use of `mediainfo` as
in:

    mediainfo --Inform="file:///tmp/chap_template.txt" *.mp4 > input.txt

with the `chap_template.txt` file having the (nasty) contents:

    General;%FileName%\n%Duration/String3%\n


Copyright 2012, Rog√©rio Theodoro de Brito <rbrito@ime.usp.br>
"""

import dateutil.parser
import sys

def time_to_timestamp(stamp):
    return dateutil.parser.parse('1970-01-01T%s UTC' % stamp).strftime('%s.%f')

# Kludge, as I can't seem to get everyting normalized in UTC
EPOCH = time_to_timestamp('00:00:00')


def main():
    lines = sys.stdin.readlines()
    lines = [line.strip() for line in lines if line.strip() != '']  # redundant

    lines.pop()  # remove the last timestamp, as that's not used
    lines.insert(0, '00:00:00.000')  # insert the time to be used as basis

    for i in range(0, len(lines), 2):
        print 'CHAPTER%02d=%s' % (i/2 + 1, lines[i])
        print 'CHAPTER%02dNAME=%s' % (i/2 + 1, lines[i+1])

if __name__ == '__main__':
    main()
